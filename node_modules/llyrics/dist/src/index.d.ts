import { version } from '../package.json';
interface searchOptions {
    /**
     * The song title
     */
    song: string;
    /**
     * The artist
     */
    artist?: string;
    /**
     * Search engine. 3 search engines are available : Genius, Musixmatch and youTube
     * Genius is used by default, so make sure to have a Genius API key.
     */
    engine?: searchEngineOptions | string;
    /**
     * A Genius API key, to fetch Genius
     * If force search is enable, a Genius API key is required
     */
    geniusApiKey?: string;
    /**
     * Changes search engine automatically if there are no results
     */
    forceSearch?: boolean;
}
interface fetchResponse {
    /**
     * The artist
     */
    artist: string;
    /**
     * The song title
     */
    title: string;
    /**
     * The MusixMatch song id.
     * 0 if the request is made using another search engine
     */
    id: string;
    /**
     * Used search engine
     */
    engine: string;
    /**
     * Cover URL
     */
    artworkURL: string;
    /**
     * The song lyrics
     */
    lyrics: string;
    /**
     * The response status
     */
    status: number;
}
declare const searchEngines: readonly ["youtube", "musixmatch", "genius"];
type searchEngineOptions = (typeof searchEngines)[number];
/**
 * Finds the lyrics of a song.
 * @param {searchOptions} searchOptions Options to refine your search
 * @returns Promise<defaultResponse | musixMatchResponse>
 * @example
 * const { find } = require('llyrics');
 * const response = await find({
 *    song: 'Bohemian Rhapsody',
 *    engine: 'musixmatch'
 * });
 * console.log(response.artist);
 */
declare function find(searchOptions: searchOptions): Promise<fetchResponse>;
export { version, find };
//# sourceMappingURL=index.d.ts.map